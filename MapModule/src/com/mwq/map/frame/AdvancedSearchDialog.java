/*
 * AdvancedSearchDialog.java
 *
 * Created on 2008年7月8日, 上午11:20
 */
package com.mwq.map.frame;

import com.mwq.map.dao.Dao;
import com.mwq.map.tool.ScreenSize;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.Enumeration;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

/**
 *
 * @author  Administrator
 */
public class AdvancedSearchDialog extends javax.swing.JDialog {

    private static final Dao dao = Dao.getInstance();
    private JList searchResultList;
    private Vector searchResult;

    /** Creates new form AdvancedSearchDialog */
    public AdvancedSearchDialog(java.awt.Frame parent, boolean modal, JList searchResultList, Vector searchResult) {
        super(parent, modal);
        this.searchResultList = searchResultList;
        this.searchResult = searchResult;
        initComponents();
        ScreenSize.centered(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        textButtonGroup = new javax.swing.ButtonGroup();
        timeButtonGroup = new javax.swing.ButtonGroup();
        sortButtonGroup = new javax.swing.ButtonGroup();
        textPanel = new javax.swing.JPanel();
        keywordTextField = new javax.swing.JTextField();
        keywordLabel = new javax.swing.JLabel();
        nameRadioButton = new javax.swing.JRadioButton();
        allRadioButton = new javax.swing.JRadioButton();
        explainRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        timePanel = new javax.swing.JPanel();
        appointRadioButton = new javax.swing.JRadioButton();
        spaceRadioButton = new javax.swing.JRadioButton();
        appointPanel = new com.mwq.map.calendar.CalendarPanel();
        spaceStartPanel = new com.mwq.map.calendar.CalendarPanel();
        spaceLabel = new javax.swing.JLabel();
        spaceEndPanel = new com.mwq.map.calendar.CalendarPanel();
        compareComboBox = new javax.swing.JComboBox();
        sortPanel = new javax.swing.JPanel();
        sortLabel = new javax.swing.JLabel();
        sortTreePanel = new com.mwq.map.mwing.MTreePanel();
        childTreeRadioButton = new javax.swing.JRadioButton();
        currentNodeRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("高级搜索");

        textPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("标记文本"));

        keywordTextField.setColumns(30);

        keywordLabel.setText("关  键  字：");

        textButtonGroup.add(nameRadioButton);
        nameRadioButton.setText("名称");
        nameRadioButton.setFocusPainted(false);

        textButtonGroup.add(allRadioButton);
        allRadioButton.setSelected(true);
        allRadioButton.setText("全部");
        allRadioButton.setFocusPainted(false);

        textButtonGroup.add(explainRadioButton);
        explainRadioButton.setText("说明");
        explainRadioButton.setFocusPainted(false);

        jLabel1.setText("搜索范围：");

        javax.swing.GroupLayout textPanelLayout = new javax.swing.GroupLayout(textPanel);
        textPanel.setLayout(textPanelLayout);
        textPanelLayout.setHorizontalGroup(
            textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(keywordLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(textPanelLayout.createSequentialGroup()
                        .addComponent(allRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(nameRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(explainRadioButton))
                    .addComponent(keywordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        textPanelLayout.setVerticalGroup(
            textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keywordLabel)
                    .addComponent(keywordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(textPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allRadioButton)
                    .addComponent(nameRadioButton)
                    .addComponent(explainRadioButton)
                    .addComponent(jLabel1))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        timePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("创建日期"));

        timeButtonGroup.add(appointRadioButton);
        appointRadioButton.setSelected(true);
        appointRadioButton.setText("指定日期");
        appointRadioButton.setFocusPainted(false);
        appointRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointRadioButtonActionPerformed(evt);
            }
        });

        timeButtonGroup.add(spaceRadioButton);
        spaceRadioButton.setText("一段时间");
        spaceRadioButton.setFocusPainted(false);
        spaceRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spaceRadioButtonActionPerformed(evt);
            }
        });

        spaceStartPanel.setEnabled(false);

        spaceLabel.setText("――");
        spaceLabel.setEnabled(false);

        spaceEndPanel.setEnabled(false);

        compareComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "等于", "大于", "小于" }));

        javax.swing.GroupLayout timePanelLayout = new javax.swing.GroupLayout(timePanel);
        timePanel.setLayout(timePanelLayout);
        timePanelLayout.setHorizontalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(timePanelLayout.createSequentialGroup()
                        .addComponent(spaceRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(spaceStartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spaceLabel))
                    .addGroup(timePanelLayout.createSequentialGroup()
                        .addComponent(appointRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(appointPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spaceEndPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compareComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        timePanelLayout.setVerticalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spaceLabel)
                    .addGroup(timePanelLayout.createSequentialGroup()
                        .addGroup(timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(timePanelLayout.createSequentialGroup()
                                .addGroup(timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(appointPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(appointRadioButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(timePanelLayout.createSequentialGroup()
                                .addComponent(compareComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGroup(timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spaceRadioButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(spaceStartPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spaceEndPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        sortPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("所属类别"));

        sortLabel.setText("所属类别：");

        sortButtonGroup.add(childTreeRadioButton);
        childTreeRadioButton.setSelected(true);
        childTreeRadioButton.setText("包含子类");
        childTreeRadioButton.setFocusPainted(false);

        sortButtonGroup.add(currentNodeRadioButton);
        currentNodeRadioButton.setText("仅当前类");
        currentNodeRadioButton.setFocusPainted(false);

        jLabel2.setText("搜索范围：");

        javax.swing.GroupLayout sortPanelLayout = new javax.swing.GroupLayout(sortPanel);
        sortPanel.setLayout(sortPanelLayout);
        sortPanelLayout.setHorizontalGroup(
            sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sortLabel)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sortPanelLayout.createSequentialGroup()
                        .addComponent(childTreeRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(currentNodeRadioButton))
                    .addComponent(sortTreePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        sortPanelLayout.setVerticalGroup(
            sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sortTreePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(childTreeRadioButton)
                    .addComponent(currentNodeRadioButton)
                    .addComponent(jLabel2))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        searchButton.setText("搜索");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        clearButton.setText("清空");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        exitButton.setText("退出");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(textPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(timePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sortPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(clearButton)
                    .addComponent(searchButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

private void appointRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
// TODO add your handling code here:
    appointPanel.setEnabled(true);
    compareComboBox.setEnabled(true);
    spaceStartPanel.setEnabled(false);
    spaceLabel.setEnabled(false);
    spaceEndPanel.setEnabled(false);
}                                                  

private void spaceRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
// TODO add your handling code here:
    appointPanel.setEnabled(false);
    compareComboBox.setEnabled(false);
    spaceStartPanel.setEnabled(true);
    spaceLabel.setEnabled(true);
    spaceEndPanel.setEnabled(true);
}                                                

private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
// TODO add your handling code here:
    String keyword = keywordTextField.getText().trim();// 获得搜索关键字
    String keywordArea = "";// 关键字的搜索范围
    Enumeration<AbstractButton> elements = textButtonGroup.getElements();
    while (elements.hasMoreElements()) {
        JRadioButton radioButton = (JRadioButton) elements.nextElement();
        if (radioButton.isSelected()) {
            keywordArea = radioButton.getText();
            break;
        }
    }
    JTextField sortTextField = sortTreePanel.getTextField();// 获得类别文本框对象
    String sort = (sortTextField.getText().length() > 0 ? sortTextField.getName() : null);// 获得搜索类别
    String sortArea = "";// 类别的搜索范围
    if (childTreeRadioButton.isSelected()) {
        sortArea = "包含子类";
    } else {
        sortArea = "仅当前类";
    }
    if (appointRadioButton.isSelected()) {// 指定日期
        String date = appointPanel.getTextField().getText();// 获得日期
        String compare = compareComboBox.getSelectedItem().toString();// 获得比较条件
        if (keyword.length() > 0 || sort != null || date.length() > 0) {// 输入了查询条件
            dealWithSearchResult(
                    dao.selectAppointSign(keyword, keywordArea, date, compare, sort, sortArea));
        } else {// 未输入任何查询条件
            JOptionPane.showMessageDialog(null, new String[]{"至少填写：", "        标记文本", 
            "        创建日期", "        所属类别", "中的一个搜索条件！"}, "友情提示", 
                    JOptionPane.INFORMATION_MESSAGE);
        }
    } else {// 一段时间
        String startDate = spaceStartPanel.getTextField().getText();// 开始日期
        String endDate = spaceEndPanel.getTextField().getText();// 结束日期
        int sl = startDate.length();
        int el = endDate.length();
        if (sl * el != 0) {// 两个日期全部选择了
            DateFormat df = DateFormat.getDateInstance();
            Date sd = null;
            Date ed = null;
            try {
                sd = df.parse(startDate);
                ed = df.parse(endDate);
            } catch (ParseException ex) {
                Logger.getLogger(AdvancedSearchDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (ed.before(sd)) {
                JOptionPane.showMessageDialog(null, "“终止日期”不能在“起始日期”之前，请重新选择！", "友情提示", JOptionPane.INFORMATION_MESSAGE);
            } else {
                dealWithSearchResult(
                        dao.selectSpaceSign(keyword, keywordArea, startDate, endDate, sort, sortArea));
            }
        } else {// 存在未选择的日期
            if (sl + el != 0) {// 只选择了一个日期
                if (sl == 0) {// 未选择开始日期
                    JOptionPane.showMessageDialog(null, "请填写“起始日期”！", "友情提示", JOptionPane.INFORMATION_MESSAGE);
                } else {// 未选择结束日期
                    JOptionPane.showMessageDialog(null, "请填写“终止日期”！", "友情提示", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {// 未选择任何日期
                if (keyword.length() > 0 || sort != null) {// 输入了查询条件
                    dealWithSearchResult(dao.selectAppointSign(keyword, keywordArea, "", "", sort, sortArea));
                } else {// 未输入任何查询条件
                    JOptionPane.showMessageDialog(null, new String[]{"至少填写：", "        标记文本", "        创建日期", "        所属类别", "中的一个搜索条件！"}, "友情提示", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }
}                                            

    private void dealWithSearchResult(Vector<Vector> searchResult) {
        this.searchResult.clear();
        this.searchResult.addAll(searchResult);
        if (searchResult.size() == 0) {
            JOptionPane.showMessageDialog(null, "没有符合条件的标记！", "友情提示", JOptionPane.INFORMATION_MESSAGE);
        } else {
            final String[] items = new String[searchResult.size()];
            for (int i = 0; i < items.length; i++) {
                items[i] = " " + (i + 1) + "、" + searchResult.get(i).get(4);
            }
            searchResultList.setModel(new javax.swing.AbstractListModel() {

                public int getSize() {
                    return items.length;
                }

                public Object getElementAt(int i) {
                    return items[i];
                }
            });
            setVisible(false);
        }
    }

private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
// TODO add your handling code here:
    this.setVisible(false);
}                                          

private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
// TODO add your handling code here:
    keywordTextField.setText(null);
    allRadioButton.setSelected(true);
    appointRadioButton.setSelected(true);
    appointPanel.setEnabled(true);
    appointPanel.getTextField().setText(null);
    compareComboBox.setSelectedIndex(0);
    spaceStartPanel.setEnabled(false);
    spaceStartPanel.getTextField().setText(null);
    spaceEndPanel.setEnabled(false);
    spaceEndPanel.getTextField().setText(null);
    sortTreePanel.getTextField().setText(null);
    childTreeRadioButton.setSelected(true);
    keywordTextField.requestFocus();
}                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AdvancedSearchDialog dialog = new AdvancedSearchDialog(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton allRadioButton;
    private com.mwq.map.calendar.CalendarPanel appointPanel;
    private javax.swing.JRadioButton appointRadioButton;
    private javax.swing.JRadioButton childTreeRadioButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox compareComboBox;
    private javax.swing.JRadioButton currentNodeRadioButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JRadioButton explainRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel keywordLabel;
    private javax.swing.JTextField keywordTextField;
    private javax.swing.JRadioButton nameRadioButton;
    private javax.swing.JButton searchButton;
    private javax.swing.ButtonGroup sortButtonGroup;
    private javax.swing.JLabel sortLabel;
    private javax.swing.JPanel sortPanel;
    private com.mwq.map.mwing.MTreePanel sortTreePanel;
    private com.mwq.map.calendar.CalendarPanel spaceEndPanel;
    private javax.swing.JLabel spaceLabel;
    private javax.swing.JRadioButton spaceRadioButton;
    private com.mwq.map.calendar.CalendarPanel spaceStartPanel;
    private javax.swing.ButtonGroup textButtonGroup;
    private javax.swing.JPanel textPanel;
    private javax.swing.ButtonGroup timeButtonGroup;
    private javax.swing.JPanel timePanel;
    // End of variables declaration                   
}
